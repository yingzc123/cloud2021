server.port=9999

#mybatis设置
mybatis.type-aliases-package=com.yzc.springcloud.entity
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
#mybatis-plus设置
mybatis-plus.mapper-locations=classpath:com/yzc/springcloud/mapper/*.xml
# shardingjdbc分片策略
# 配置数据源，给数据源起名称
spring.shardingsphere.datasource.names=yzc1

# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true

#配置数据源具体内容，包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.yzc1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.yzc1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.yzc1.url=jdbc:mysql://rm-bp15qb6d0jd02q7k4qo.mysql.rds.aliyuncs.com:3306/cloud_branch?serverTimezone=GMT%2b8
spring.shardingsphere.datasource.yzc1.username=sb
spring.shardingsphere.datasource.yzc1.password=Hahahaha!

#指定user表分布情况，配置表在哪个数据库里面，表名称都是什么  yzc1.user_1 , yzc1.user_2
spring.shardingsphere.sharding.tables.user.actual-data-nodes=yzc1.user_$->{1..2}

# 指定user表里面主键id 生成策略  SNOWFLAKE
spring.shardingsphere.sharding.tables.user.key-generator.column=user_id
spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE

# 指定分片策略  约定id值偶数添加到user_1表，如果id是奇数添加到user_2表
spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$->{user_id%2+1}

# 打开sql输出日志
spring.shardingsphere.props.sql.show=true

logging.level.com=debug